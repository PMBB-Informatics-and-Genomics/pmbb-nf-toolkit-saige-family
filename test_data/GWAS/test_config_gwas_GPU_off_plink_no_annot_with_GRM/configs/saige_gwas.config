params {
    // default assumes use of the docker container
    my_python = "/opt/conda/bin/python"
    
    //setting file type for step 2 (PLINK/BGEN)
    ftype = "PLINK"
    GPU="OFF"
    annotate=false   

    step1_script = "/usr/local/bin/step1_fitNULLGLMM.R"
    step2_script = "/usr/local/bin/step2_SPAtests.R"

    data_csv = "${launchDir}/Input/pheno_1000samples.txt_withdosages_withBothTraitTypes.csv"
    cohort_sets = "${launchDir}/Input/pheno_1000samples.txt_withdosages_withBothTraitTypes.COHORTS.csv"

    // default paths are for PMBB Geno data
    use_sparse_GRM = true
    step1_plink_prefix = "${launchDir}/Input/nfam_100_nindep_0_step1_includeMoreRareVariants_poly"
    step1_sparse_grm = "${launchDir}/Input/sparseGRM_relatednessCutoff_0.125_2000_randomMarkersUsed.sparseGRM.mtx"
    step1_sparse_grm_samples = "${launchDir}/Input/sparseGRM_relatednessCutoff_0.125_2000_randomMarkersUsed.sparseGRM.mtx.sampleIDs.txt"

    step2_plink_prefix  = "${launchDir}/Input/genotype_100markers_2chr.chr"

    // ID column label
    id_col = "IID"
    cohort_list = ["POP1", "POP2", "POP3"]
    sex_strat_cohort_list = ["POP3"]
    
    // Full list of chromosomes
    chromosome_list = ["1", "2"]

    // binary and quantitative phenotype [lists] or path to file of newline-separated lists
    bin_pheno_list = ["y_binary"]
    quant_pheno_list = ["y_quantitative"]
    
    // categorical and continuous covariates
    cat_covars = ["x2"]
    cont_covars = ["x1"]

    sex_strat_cat_covars = []
    sex_strat_cont_covars = cont_covars
    sex_specific_pheno_file = null

    min_bin_cases = 1
    min_quant_n = 1

    // Plink parameters for SAIGE Step 1 Input QC which needs a small set of high-quality variants
    // Current defaults are recommended by GBMI analysis plan
    maf = 0.01
    geno = 0.01
    hwe = 1E-6

    // Step 2 Parameters
    min_maf = 0
    min_mac = 40
    firth_cutoff = 0.1
    LOCO = "FALSE"
    inverseNormalize="TRUE"

    p_cutoff_summarize = 0.01
    gwas_col_names = [
        CHR: 'chromosome',
        POS: 'base_pair_location',
        MarkerID: 'variant_id',
        Allele1: 'other_allele',
        Allele2: 'effect_allele',
        AC_Allele2: 'effect_allele_count',
        AF_Allele2: 'effect_allele_frequency',
        MissingRate: 'missing_rate',
        BETA: 'beta',
        SE: 'standard_error',
        Tstat: 't_statistic',
        var: 'variance',
        'p.value': 'p_value',
        'p.value.NA': 'p_value_na',
        'Is.SPA': 'is_spa_test',
        AF_case: 'allele_freq_case',
        AF_ctrl: 'allele_freq_ctrl',
        N_case: 'n_case',
        N_ctrl: 'n_ctrl',
        N_case_hom: 'n_case_hom',
        N_case_het: 'n_case_het',
        N_ctrl_hom: 'n_ctrl_hom',
        N_ctrl_het: 'n_ctrl_het'
    ]

    // The following arguments go with annotate=true and will be used by the biofilter_wrapper sub-workflow
    biofilter_build = '38' // can be 19 or 38
    biofilter_loki = '/path/to/directory/loki.db'
    biofilter_script = '/app/biofilter.py' // Must be an executable python file
    biofilter_close_dist = 5E4

}
